---
import type { CollectionEntry } from 'astro:content';
import DateTime from '../components/DateTime.astro';
import Intro from '../components/Intro.astro';
import PostBody from '../components/PostBody.astro';

export interface Props {
  post:
    | CollectionEntry<'blog'>
    | CollectionEntry<'vscodetips'>
    | CollectionEntry<'newsletter'>;
}
const { post } = Astro.props;
const {
  data: { date, title, tags },
} = post;
const { Content } = await post.render();
---

<article class="post h-entry">
  <Intro heading={title}>
    <p class="intro__meta text-500 leading-tight">
      {
        date && (
          <span class="box-flex gap-100">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="feather feather-calendar"
            >
              <rect x="3" y="4" width="18" height="18" rx="2" ry="2" />
              <line x1="16" y1="2" x2="16" y2="6" />
              <line x1="8" y1="2" x2="8" y2="6" />
              <line x1="3" y1="10" x2="21" y2="10" />
            </svg>
            <DateTime date={new Date(date)} />
          </span>
        )
      }
      {
        'reading_time_minutes' in post.data && (
          <span class="box-flex gap-100">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="feather feather-clock"
            >
              <circle cx="12" cy="12" r="10" />
              <polyline points="12 6 12 12 16 14" />
            </svg>
            {post.data.reading_time_minutes} minute read
          </span>
        )
      }
    </p>
  </Intro>
  <PostBody>
    <Content />
  </PostBody>
  {
    tags && (
      <footer class="[ post__footer ] [ pad-top-500 pad-bottom-500 ]">
        <div class="inner-wrapper">
          <div class="nav box-flex align-center flex-wrap">
            <h2 class="font-base text-600 weight-mid">tags</h2>
            <ul class="nav__list box-flex align-center pad-left-400 flex-wrap p-category">
              {tags.map((tag) => (
                <li class="nav__item tag">
                  <a href={`/tags/${tag}`}>{tag}</a>
                </li>
              ))}
            </ul>
          </div>
        </div>
      </footer>
    )
  }
</article>
